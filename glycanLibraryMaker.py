'''Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.'''

#               #
# configuration #
#               #

csv3FileName = "CSV_5_HRP_cleaned_filtered.csv"


#            #
# end config #
#            #

#import libraries
newLibraryFileName = csv3FileName[:-4] + "-library.csv"
import csv

#write out header:
header = [["""# Agilent TOF Formula data store"""],
          ["""# Version: generated by script"""],
          ["""#"""],
          ["""# This is a compound formula database file used by Agilent MassHunter applications."""],
          ["""# Copy to a different file if you wish to make changes to database contents"""],
          ["""# You can set the version (below) to any string value."""],
          ["""# We recommend changing it when you update the database contents."""],
          ["""#"""],
          ["""# Each record in this file contins 5 columns described in the last comment in this comment block."""],
          ["""# Retention time and Description are optional."""],
          ["""# Each record should be kept on an individual line."""],
          ["""# Fields are separated by comma.  Use quotes around a field that contains a comma."""],
          ["### Formula", "Retention Time", "Mass", "Compound name", "Description","","1.007825032"],
          ["# Formula", "RT", "Mass", "Cpd", "Comments","",""]]

##          ##
## read CSV ##
##          ##
inputFile = open(csv3FileName, 'r')
csvInputFileTemp = csv.reader(inputFile, dialect='excel')
csvInputFile = []
for row in csvInputFileTemp:
    csvInputFile.append(row)

#find headers
row = 0
notFoundHeaders = True
while notFoundHeaders:
    if len(csvInputFile[row]) > 0 and csvInputFile[row][0] == "Feature No.":
        print("found")
        csvHeaders = csvInputFile[row]
        notFoundHeaders = False
        row += 1
    else:
        print("not found")
        print(row)
        row += 1

#
#compose list of desired headers and assign the list values
#
indexDict = {"GP Actual Mass":0,
             "RT":0,
             "Hex":0,
             "HexNAc":0,
             "DeoxyHex":0,
             "Sialic Acid (Neu5Ac and Neu5Gc)":0,
             "Nonstandard Glycan Components":0,
             "Glycosylation Site Position":0}
for i in range(len(csvHeaders)):
    for index in indexDict:
        if csvHeaders[i] == index:
            indexDict[index] = i
            
print(indexDict)
#read in info and extend header            
while row < len(csvInputFile):
    newCompound = [""]
    rt = csvInputFile[row][indexDict["RT"]]
    mass = csvInputFile[row][indexDict["GP Actual Mass"]]
    
    #generate name
    site = csvInputFile[row][indexDict["Glycosylation Site Position"]]
    hex = csvInputFile[row][indexDict["Hex"]]
    hexNac = csvInputFile[row][indexDict["HexNAc"]]
    DeoxyHex = csvInputFile[row][indexDict["DeoxyHex"]]
    sialicAcid = csvInputFile[row][indexDict["Sialic Acid (Neu5Ac and Neu5Gc)"]]
    nonstandard = csvInputFile[row][indexDict["Nonstandard Glycan Components"]]
    if "entose" in nonstandard:
        nonstandard = "1"
    else:
        nonstandard = "0"
    composition = ".".join([hex, hexNac, DeoxyHex, sialicAcid, nonstandard])
    composition = site + "-" + composition
    newCompound.extend([rt, mass, composition, ""])
    
    header.append(newCompound)
    row += 1

#convert to utf-8 if python == 3
'''import sys
majorVersion = sys.version_info[0]
if majorVersion == 3:
    for i in range(len(header)):
        for j in range(len(header[i])):
            header[i][j] = bytes(header[i][j], "utf-8")'''
        
print("\n\n")
             
#write file
with open(newLibraryFileName, 'w') as csvfile:
    compoundCsvWriter = csv.writer(csvfile, lineterminator="\n")
    for compoundRow in header:
        print(compoundRow)
        compoundCsvWriter.writerow(compoundRow)